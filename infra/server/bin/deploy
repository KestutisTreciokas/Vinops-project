#!/usr/bin/env bash
set +e
SHORT_SHA="$1"     # 7-12 символов, без префикса 'sha-'
TARGET="${2:-prod}" # dev|prod
: "${PROJECT_DIR:=${PROJECT_DIR:-/root/work/vinops}}"
: "${GHCR_PULL_USER:?GHCR_PULL_USER is required}"
: "${GHCR_PULL_TOKEN:?GHCR_PULL_TOKEN is required}"

cd "$PROJECT_DIR" 2>/dev/null || mkdir -p "$PROJECT_DIR" && cd "$PROJECT_DIR"

# Логин в GHCR для pull
echo "$GHCR_PULL_TOKEN" | docker login ghcr.io -u "$GHCR_PULL_USER" --password-stdin

# Обновляем .env c тегами
[ -f .env ] || touch .env
grep -q '^GHCR_IMAGE_WEB=' .env || echo 'GHCR_IMAGE_WEB=ghcr.io/kestutistreciokas/vinops-web' >> .env
grep -q '^GHCR_IMAGE_API=' .env || echo 'GHCR_IMAGE_API=ghcr.io/kestutistreciokas/vinops-api' >> .env

if [ "$TARGET" = "prod" ]; then
  WEB_TAG="prod"
  API_TAG="prod"
else
  WEB_TAG="sha-$SHORT_SHA"
  API_TAG="sha-$SHORT_SHA"
fi

sed -i -E "s|^WEB_IMAGE_TAG=.*$|WEB_IMAGE_TAG=${WEB_TAG}|g" .env 2>/dev/null || echo "WEB_IMAGE_TAG=${WEB_TAG}" >> .env
sed -i -E "s|^API_IMAGE_TAG=.*$|API_IMAGE_TAG=${API_TAG}|g" .env 2>/dev/null || echo "API_IMAGE_TAG=${API_TAG}" >> .env

# Pull + up
docker compose -f docker-compose.yml -f docker-compose.prod.yml pull
docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

# Записываем «текущий релиз»
echo "sha=$SHORT_SHA target=$TARGET ts=$(date -u +%FT%TZ)" > .release_current

# Smoke локальный (health)
sleep 2
curl -sk http://localhost/healthz >/dev/null 2>&1 || true
exit 0
