#!/usr/bin/env bash
# vinops smoke runner

# 1) Load environment: explicit $ENV_FILE → global → release-local → defaults
ENV_LOADED=""
try_env() { [ -n "$1" ] && [ -f "$1" ] && . "$1" && ENV_LOADED="$1"; }
try_env "${ENV_FILE:-}"
[ -z "$ENV_LOADED" ] && try_env "/srv/vinops/.env"
[ -z "$ENV_LOADED" ] && try_env "$(cd "$(dirname "$0")"/.. && pwd)/.env"

: "${TZ:=Europe/Warsaw}"
: "${RELEASES_DIR:=/srv/vinops/releases}"
: "${LOG_DIR:=/srv/vinops/logs}"
: "${CURRENT_SHA_FILE:=${RELEASES_DIR}/CURRENT_SHA}"
: "${PREV_SHA_FILE:=${RELEASES_DIR}/PREV_SHA}"
: "${DEV_HOST:=dev.vinops.online}"
: "${PROD_HOST:=vinops.online}"

show_help() {
  cat <<'H'
Usage: smoke --host {dev|prod} [--waive-vin]
Checks:
  / -> 308 (Location: /en)
  /en, /robots.txt, /sitemap.xml -> 200
  /api/v1/vehicles/INVALID... -> 422 (or WAIVED with --waive-vin)
H
}

HOST_SEL=""
WAIVE_VIN=0
while [ $# -gt 0 ]; do
  case "$1" in
    --host) shift; HOST_SEL="$1" ;;
    --host=*) HOST_SEL="${1#--host=}" ;;
    --waive-vin) WAIVE_VIN=1 ;;
    -h|--help) show_help; exit 0 ;;
    *) echo "[WARN] unknown arg: $1" ;;
  esac
  shift || true
done

case "$HOST_SEL" in
  dev)  HOST="$DEV_HOST" ;;
  prod) HOST="$PROD_HOST" ;;
  *) echo "[FAIL] --host {dev|prod} is required"; exit 2 ;;
esac

export TZ
ts() { date +'%F %H:%M %Z'; }
curl_code() { curl -sk -o /dev/null -w '%{http_code}' "$1"; }
location() { curl -skI "$1" | awk -F': ' 'tolower($1)=="location"{print $2}' | tr -d '\r'; }

FAIL=0
echo "[$(ts)] Host: $HOST"

code="$(curl_code "https://$HOST/")"; loc="$(location "https://$HOST/")"
echo "[$(ts)] / -> $code${loc:+ (Location: $loc)}"
[ "$code" = "308" ] && [ "$loc" = "/en" ] || FAIL=1

for p in /en /robots.txt /sitemap.xml; do
  code="$(curl_code "https://$HOST$p")"
  echo "[$(ts)] $p -> $code"
  [ "$code" = "200" ] || FAIL=1
done

VIN_PATH="/api/v1/vehicles/INVALID000000000000000"
code="$(curl_code "https://$HOST$VIN_PATH")"
echo "[$(ts)] $VIN_PATH -> $code"
if [ "$code" != "422" ]; then
  if [ "$WAIVE_VIN" = "1" ]; then
    echo "[$(ts)] VIN check WAIVED"
  else
    FAIL=1
  fi
fi

if [ "$FAIL" = "0" ]; then
  echo "[$(ts)] SMOKE: OK"; exit 0
else
  echo "[$(ts)] SMOKE: FAIL"; exit 1
fi
